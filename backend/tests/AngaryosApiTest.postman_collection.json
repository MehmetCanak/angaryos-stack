{
	"info": {
		"_postman_id": "f9d7edde-b616-4c75-8e06-766adbe76307",
		"name": "Angaryos Api Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Base",
			"item": [
				{
					"name": "Api Base Control",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Global Functions\r",
									"\r",
									"var temp = function loadUtils() \r",
									"{\r",
									"    let utils = {};\r",
									"\r",
									"    utils.idNumberControl = function idNumberControl(id) \r",
									"    {\r",
									"        pm.test(\"id is correct type\", function () \r",
									"        {\r",
									"            pm.expect(id).to.be.a('number');\r",
									"        });\r",
									"    };\r",
									"\r",
									"    utils.standartControl = function standartControl() \r",
									"    {\r",
									"        pm.test(\"Status code is 200\", function () \r",
									"        {\r",
									"            pm.response.to.have.status(200);\r",
									"        });\r",
									"    };\r",
									"\r",
									"    utils.messageControl = function messageControl(message, control) \r",
									"    {\r",
									"        pm.test(\"Message is '\"+control+\"'\", function () \r",
									"        {\r",
									"            pm.expect(message).to.eql(control);\r",
									"        });\r",
									"    };\r",
									"\r",
									"    utils.equalControl = function equalControl(var1, var2) \r",
									"    {\r",
									"        pm.test(\"Equal control\", function () \r",
									"        {\r",
									"            pm.expect(var1).to.eql(var2);\r",
									"        });\r",
									"    };\r",
									"\r",
									"    utils.typeControl = function typeControl(param, typeName) \r",
									"    {\r",
									"        pm.test(\"Variable type control\", function () \r",
									"        {\r",
									"            pm.expect(param).to.be.a(typeName);\r",
									"        });\r",
									"    };\r",
									"\r",
									"    utils.isTrue = function isTrue(param) \r",
									"    {\r",
									"        pm.test(\"isTrue control\", function () \r",
									"        {\r",
									"            pm.expect(param).to.be.true;\r",
									"        });\r",
									"    };\r",
									"\r",
									"    return utils;\r",
									"\r",
									"};\r",
									"\r",
									"pm.globals.set('loadUtils', temp + '; loadUtils();');\r",
									"\r",
									"\r",
									"\r",
									"// Tests\r",
									"\r",
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.messageControl(data[\"data\"][\"message\"], \"service.ok\");\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiBaseUrl}}",
							"host": [
								"{{apiBaseUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Api Version Control",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.messageControl(data[\"data\"][\"message\"], \"service.ok\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}",
							"host": [
								"{{apiUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var token = data[\"data\"][\"token\"]\r",
									"pm.environment.set(\"token\", token);\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(token, 'string');\r",
									"\r",
									"pm.test(\"Token length control\", function () \r",
									"{\r",
									"    pm.expect(token.length > 10).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}login?email=iletisim@omersavas.com&password=1234Aa.&clientInfo={\"type\":\"postman\", \"clientInfo\":\"Angaryos Api Test\"}",
							"host": [
								"{{apiUrl}}login"
							],
							"query": [
								{
									"key": "email",
									"value": "iletisim@omersavas.com"
								},
								{
									"key": "password",
									"value": "1234Aa."
								},
								{
									"key": "clientInfo",
									"value": "{\"type\":\"postman\", \"clientInfo\":\"Angaryos Api Test\"}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Logged In User Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var info = data[\"data\"]\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"\r",
									"utils.isTrue(typeof info[\"auths\"] != \"undefined\");\r",
									"utils.isTrue(typeof info[\"user\"] != \"undefined\");\r",
									"utils.isTrue(typeof info[\"menu\"] != \"undefined\");\r",
									"\r",
									"\r",
									"\r",
									"//Set variables \r",
									"\r",
									"pm.environment.set(\"loggedInUserInfo\", JSON.stringify(info));\r",
									"\r",
									"pm.environment.set(\"tablesTableColumnArrayId\", info[\"auths\"][\"tables\"][\"tables\"][\"lists\"][0]);\r",
									"pm.environment.set(\"tablesTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"tables\"][\"queries\"][0]);\r",
									"pm.environment.set(\"tablesTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"tables\"][\"creates\"][0]);\r",
									"pm.environment.set(\"tablesTableColumnUpdateSetId\", info[\"auths\"][\"tables\"][\"tables\"][\"edits\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"columns\"][\"lists\"][0]);\r",
									"pm.environment.set(\"columnsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"columns\"][\"queries\"][0]);\r",
									"pm.environment.set(\"columnsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"columns\"][\"creates\"][0]);\r",
									"pm.environment.set(\"columnsTableColumnUpdateSetId\", info[\"auths\"][\"tables\"][\"columns\"][\"edits\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnValidationsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_validations\"][\"lists\"][0]);\r",
									"pm.environment.set(\"columnValidationsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_validations\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnDbTypesTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_db_types\"][\"lists\"][0]);\r",
									"pm.environment.set(\"columnDbTypesTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_db_types\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnGuiTypesTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_gui_types\"][\"lists\"][0]);\r",
									"pm.environment.set(\"columnGuiTypesTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_gui_types\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"upColumnsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"up_columns\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnTableRelationsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_table_relations\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"joinTablesTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"join_tables\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"columnDataSourcesTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_data_sources\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesSubscribersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"subscribers\"][\"creates\"][0]);\r",
									"pm.environment.set(\"subscribersTableColumnArrayId\", info[\"auths\"][\"tables\"][\"subscribers\"][\"lists\"][0]);\r",
									"pm.environment.set(\"subscribersTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"subscribers\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"settingsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"settings\"][\"lists\"][0]);\r",
									"pm.environment.set(\"settingsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"settings\"][\"queries\"][0]);\r",
									"pm.environment.set(\"tablesSettingsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"settings\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"eSignsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"e_signs\"][\"lists\"][0]);\r",
									"pm.environment.set(\"eSignsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"e_signs\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesTableGroupsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"table_groups\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"authGroupsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"lists\"][0]);\r",
									"pm.environment.set(\"authGroupsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"queries\"][0]);\r",
									"pm.environment.set(\"tablesAuthGroupsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"creates\"][0]);\r",
									"pm.environment.set(\"tablesAuthGroupsColumnEditSetId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"edits\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesUsersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"users\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesColumnArraysColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_arrays\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesColumnSetsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_sets\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesDataFiltersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"data_filters\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesMissionsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"missions\"][\"creates\"][0]);\r",
									"pm.environment.set(\"tablesAdditionalLinksColumnCreateSetId\", info[\"auths\"][\"tables\"][\"additional_links\"][\"creates\"][0]);\r",
									"pm.environment.set(\"tablesDevicesColumnCreateSetId\", info[\"auths\"][\"tables\"][\"devices\"][\"creates\"][0]);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/getLoggedInUserInfo",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"getLoggedInUserInfo"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboards",
			"item": [
				{
					"name": "Auth Groups Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"table_display_name\"], 'string');\r",
									"utils.typeControl(data[\"data\"][\"count\"], 'number');\r",
									"utils.typeControl(data[\"data\"][\"all\"], 'number');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:RecordCount:auth_groups:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:RecordCount:auth_groups:0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Users Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"table_display_name\"], 'string');\r",
									"utils.typeControl(data[\"data\"][\"count\"], 'number');\r",
									"utils.typeControl(data[\"data\"][\"all\"], 'number');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:RecordCount:users:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:RecordCount:users:0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Departments Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"table_display_name\"], 'string');\r",
									"utils.typeControl(data[\"data\"][\"count\"], 'number');\r",
									"utils.typeControl(data[\"data\"][\"all\"], 'number');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:RecordCount:departments:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:RecordCount:departments:0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current Jobs Count",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"display_name\"], 'string');\r",
									"utils.typeControl(data[\"data\"][\"number\"], 'number');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:RefreshableNumber:JobCount:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:RefreshableNumber:JobCount:0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Graphic XY Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"title\"], 'string');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:GraphicXY:Test:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:GraphicXY:Test:0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Graphic Pie Test",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(data[\"data\"][\"title\"], 'string');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/dashboards/getData/dashboards:GraphicPie:Test:0",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"dashboards",
								"getData",
								"dashboards:GraphicPie:Test:0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tables And Columns",
			"item": [
				{
					"name": "Preload For Up Column",
					"item": [
						{
							"name": "Get name_basic column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsNameBasicId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"name_basic\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"name_basic\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get id column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsIdId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"id\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"id\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get state column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsStateId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"state\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"state\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get created_at column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsCreatedAtId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"created_at\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"created_at\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get updated_at column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsUpdatedAtId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"updated_at\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"updated_at\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get own_id column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsOwnIdId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"own_id\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"own_id\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user_id column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsUserIdId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"user_id\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"user_id\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Iller Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"tablesIllerId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/tables/store?display_name=İller&name=iller&column_ids=[\"{{columnsNameBasicId}}\"]&subscriber_ids=[]&legend_url&e_sign_pattern_t&description&link_description&state=1&column_set_id={{tablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"tables",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "İller"
										},
										{
											"key": "name",
											"value": "iller"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsNameBasicId}}\"]"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "legend_url",
											"value": null
										},
										{
											"key": "e_sign_pattern_t",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "link_description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Kutahya Record Into Iller Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"illerKutahyaId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/iller/store?name_basic=Kütahya&state=1&column_set_id=0&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"iller",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "Kütahya"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "0"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Eskisehir Record Into Iller Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"illerEskisehirId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/iller/store?name_basic=Eskişehir&state=1&column_set_id=0&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"iller",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "Eskişehir"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "0"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get iller_id column id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"columnsIllerIdId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"iller_id\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{columnsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"iller_id\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Ilceler Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"tablesIlcelerId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/tables/store?display_name=İlçeler&name=ilceler&column_ids=[\"{{columnsNameBasicId}}\", \"{{columnsIllerIdId}}\"]&subscriber_ids=[]&legend_url&e_sign_pattern_t&description&link_description&state=1&column_set_id={{tablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"tables",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "İlçeler"
										},
										{
											"key": "name",
											"value": "ilceler"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsNameBasicId}}\", \"{{columnsIllerIdId}}\"]"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "legend_url",
											"value": null
										},
										{
											"key": "e_sign_pattern_t",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "link_description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Altintas Record Into Ilceler Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"ilcelerAltintasId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/ilceler/store?name_basic=Altıntaş&iller_id={{illerKutahyaId}}&state=1&column_set_id=0&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"ilceler",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "Altıntaş"
										},
										{
											"key": "iller_id",
											"value": "{{illerKutahyaId}}"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "0"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Sivrihisar Record Into Ilceler Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"ilcelerSivrihisarId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/ilceler/store?name_basic=Sivrihisar&iller_id={{illerEskisehirId}}&state=1&column_set_id=0&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"ilceler",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "Sivrihisar"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "0"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Columns",
					"item": [
						{
							"name": "Get All Column Db Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"for(var i = 0; i < recs.length; i++)\r",
											"{\r",
											"    var rec = recs[i];\r",
											"\r",
											"    var id = rec[\"id\"];\r",
											"    var name = rec[\"name\"]\r",
											"\r",
											"    pm.environment.set(\"columnDbTypes_\"+name+\"_Id\", id);\r",
											"    utils.idNumberControl(id);\r",
											"}\r",
											"    \r",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_db_types/?params={\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnDbTypesTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnDbTypesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_db_types",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnDbTypesTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnDbTypesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Column Gui Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"for(var i = 0; i < recs.length; i++)\r",
											"{\r",
											"    var rec = recs[i];\r",
											"\r",
											"    var id = rec[\"id\"];\r",
											"    var name = rec[\"name\"]\r",
											"\r",
											"    pm.environment.set(\"columnGuiTypes_\"+name+\"_Id\", id);\r",
											"    utils.idNumberControl(id);    \r",
											"}\r",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_gui_types/?params={\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnGuiTypesTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnGuiTypesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_gui_types",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnGuiTypesTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnGuiTypesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get All Column Validations Types",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function clearName(str)\r",
											"{\r",
											"    str = str.split(\":\").join(\"_\");\r",
											"    str = str.split(\".\").join(\"_\");\r",
											"    str = str.split(\",\").join(\"_\");\r",
											"    str = str.split('\"').join(\"_\");\r",
											"    str = str.split(\"'\").join(\"_\");\r",
											"    str = str.split(\"-\").join(\"_\");\r",
											"\r",
											"    return str;\r",
											"}\r",
											"\r",
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"for(var i = 0; i < recs.length; i++)\r",
											"{\r",
											"    var rec = recs[i];\r",
											"\r",
											"    var id = rec[\"id\"];\r",
											"    \r",
											"    var name = rec[\"validation_with_params\"]\r",
											"    name = clearName(name);\r",
											"\r",
											"    pm.environment.set(\"columnValidation_\"+name+\"_Id\", id);\r",
											"    utils.idNumberControl(id); \r",
											"}\r",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_validations/?params={\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnValidationsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnValidationsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_validations",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{columnValidationsTableColumnArrayId}}\",\"column_array_id_query\":\"{{columnValidationsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Json Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColJsonId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Json Kolon&name=column_json&column_db_type_id={{columnDbTypes_json_Id}}&column_gui_type_id={{columnGuiTypes_jsonb_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_json_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Json Kolon"
										},
										{
											"key": "name",
											"value": "column_json"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_json_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_jsonb_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_json_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create JsonB Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColJsonBId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Json* Kolon&name=column_jsonb&column_db_type_id={{columnDbTypes_jsonb_Id}}&column_gui_type_id={{columnGuiTypes_jsonb_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_json_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Json* Kolon"
										},
										{
											"key": "name",
											"value": "column_jsonb"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_jsonb_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_jsonb_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_json_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create String Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColStringId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=String Kolon&name=column_string&column_db_type_id={{columnDbTypes_string_Id}}&column_gui_type_id={{columnGuiTypes_string_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "String Kolon"
										},
										{
											"key": "name",
											"value": "column_string"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_string_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_string_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Text Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColTextId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Text Kolon&name=column_text&column_db_type_id={{columnDbTypes_text_Id}}&column_gui_type_id={{columnGuiTypes_text_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Text Kolon"
										},
										{
											"key": "name",
											"value": "column_text"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_text_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_text_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Int Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColIntId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Tamsayı Kolon&name=column_int&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_numeric_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_numeric_Id}}\",\"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Tamsayı Kolon"
										},
										{
											"key": "name",
											"value": "column_int"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_numeric_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_numeric_Id}}\",\"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Float Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColFloatId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Virgüllü Sayı Kolon&name=column_float&column_db_type_id={{columnDbTypes_float_Id}}&column_gui_type_id={{columnGuiTypes_numeric_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_numeric_Id}}\",\"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Virgüllü Sayı Kolon"
										},
										{
											"key": "name",
											"value": "column_float"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_float_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_numeric_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_numeric_Id}}\",\"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Boolean Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColBooleanId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Mantıksal Kolon&name=column_boolean&column_db_type_id={{columnDbTypes_boolean_Id}}&column_gui_type_id={{columnGuiTypes_boolean_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_boolean_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Mantıksal Kolon"
										},
										{
											"key": "name",
											"value": "column_boolean"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_boolean_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_boolean_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_boolean_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Date Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColDateId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Tarih Kolon&name=column_date&column_db_type_id={{columnDbTypes_date_Id}}&column_gui_type_id={{columnGuiTypes_date_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__Y_m_d__Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Tarih Kolon"
										},
										{
											"key": "name",
											"value": "column_date"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_date_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_date_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__Y_m_d__Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Time Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColTimeId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Saat Kolon&name=column_time&column_db_type_id={{columnDbTypes_time_Id}}&column_gui_type_id={{columnGuiTypes_time_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__H_i_s__Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Saat Kolon"
										},
										{
											"key": "name",
											"value": "column_time"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_time_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_time_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__H_i_s__Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Date Time Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColDateTimeId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Tarih Saat Kolon&name=column_date_time&column_db_type_id={{columnDbTypes_datetime_Id}}&column_gui_type_id={{columnGuiTypes_datetime_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__Y_m_d H_i_s__Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Tarih Saat Kolon"
										},
										{
											"key": "name",
											"value": "column_date_time"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_datetime_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_datetime_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_date_format__Y_m_d H_i_s__Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Geo Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColMultiPolygonId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Coğrafi Kolon&name=column_multipolygon&column_db_type_id={{columnDbTypes_multipolygon_Id}}&column_gui_type_id={{columnGuiTypes_multipolygon_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Coğrafi Kolon"
										},
										{
											"key": "name",
											"value": "column_multipolygon"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_multipolygon_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_multipolygon_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Up Column Relation For Simple Up Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"upColumnIdForSimpleUpColumn\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/up_columns/store?name_basic=İlçeler kolonu için sadece seçili ilin ilçeleri gelsin.&column_id={{columnsIllerIdId}}&table_ids=[\"{{tablesIlcelerId}}\"]&php_code=<?php\n$temp = DB::table('ilceler')\n            ->where('iller_id', (int)$data)\n            ->pluck('id');\n$return = [];\nforeach($temp as $item) array_push($return, $item);\n?>&description&state=1&column_set_id={{upColumnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"up_columns",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "İlçeler kolonu için sadece seçili ilin ilçeleri gelsin."
										},
										{
											"key": "column_id",
											"value": "{{columnsIllerIdId}}"
										},
										{
											"key": "table_ids",
											"value": "[\"{{tablesIlcelerId}}\"]"
										},
										{
											"key": "php_code",
											"value": "<?php\n$temp = DB::table('ilceler')\n            ->where('iller_id', (int)$data)\n            ->pluck('id');\n$return = [];\nforeach($temp as $item) array_push($return, $item);\n?>"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{upColumnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Relation For Simple Up Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"relationIdForSimpleUpColumn\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_table_relations/store?name_basic=Üst kolon için ilçeler tablosu ilişkisi&relation_table_id={{tablesIlcelerId}}&relation_source_column_id={{columnsIdId}}&relation_display_column_id={{columnsNameBasicId}}&join_table_ids=[]&relation_sql&relation_source_column&relation_display_column&column_data_source_id&description&state=1&column_set_id={{columnTableRelationsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_table_relations",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "Üst kolon için ilçeler tablosu ilişkisi"
										},
										{
											"key": "relation_table_id",
											"value": "{{tablesIlcelerId}}"
										},
										{
											"key": "relation_source_column_id",
											"value": "{{columnsIdId}}"
										},
										{
											"key": "relation_display_column_id",
											"value": "{{columnsNameBasicId}}"
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "relation_sql",
											"value": null
										},
										{
											"key": "relation_source_column",
											"value": null
										},
										{
											"key": "relation_display_column",
											"value": null
										},
										{
											"key": "column_data_source_id",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnTableRelationsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple Up Column Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColSimpleUpColumnId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Örnek Üst Kolon&name=column_simple_up_column&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_select_Id}}&srid&up_column_id={{upColumnIdForSimpleUpColumn}}&column_table_relation_id={{relationIdForSimpleUpColumn}}&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Örnek Üst Kolon"
										},
										{
											"key": "name",
											"value": "column_simple_up_column"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_select_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": "{{upColumnIdForSimpleUpColumn}}"
										},
										{
											"key": "column_table_relation_id",
											"value": "{{relationIdForSimpleUpColumn}}"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Relation With table_id and colname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"relationIdForRelationColumn1\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_table_relations/store?name_basic=İlişkili kolon için ilçeler tablosu ilişkisi (table_id ve colname ile)&relation_table_id={{tablesIlcelerId}}&relation_source_column_id=&relation_display_column_id=&join_table_ids=[]&relation_sql&relation_source_column=id&relation_display_column=\"name_basic\"&column_data_source_id&description&state=1&column_set_id={{columnTableRelationsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_table_relations",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "İlişkili kolon için ilçeler tablosu ilişkisi (table_id ve colname ile)"
										},
										{
											"key": "relation_table_id",
											"value": "{{tablesIlcelerId}}"
										},
										{
											"key": "relation_source_column_id",
											"value": ""
										},
										{
											"key": "relation_display_column_id",
											"value": ""
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "relation_sql",
											"value": null
										},
										{
											"key": "relation_source_column",
											"value": "id"
										},
										{
											"key": "relation_display_column",
											"value": "\"name_basic\""
										},
										{
											"key": "column_data_source_id",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnTableRelationsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple Relation Column With table_id and colname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColRelation1Id\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Örnek İkişkili Kolon  (table_id ve colname ile)&name=column_relation1&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_select_Id}}&srid&up_column_id=&column_table_relation_id={{relationIdForRelationColumn1}}&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Örnek İkişkili Kolon  (table_id ve colname ile)"
										},
										{
											"key": "name",
											"value": "column_relation1"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_select_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": ""
										},
										{
											"key": "column_table_relation_id",
											"value": "{{relationIdForRelationColumn1}}"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Relation With sql",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"relationIdForRelationColumn2\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_table_relations/store?name_basic=İlişkili kolon için ilçeler tablosu ilişkisi (sql ile)&relation_table_id=&relation_source_column_id=&relation_display_column_id=&join_table_ids=[]&relation_sql=select * from ilceler&relation_source_column=id&relation_display_column=name_basic&column_data_source_id&description&state=1&column_set_id={{columnTableRelationsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_table_relations",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "İlişkili kolon için ilçeler tablosu ilişkisi (sql ile)"
										},
										{
											"key": "relation_table_id",
											"value": ""
										},
										{
											"key": "relation_source_column_id",
											"value": ""
										},
										{
											"key": "relation_display_column_id",
											"value": ""
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "relation_sql",
											"value": "select * from ilceler"
										},
										{
											"key": "relation_source_column",
											"value": "id"
										},
										{
											"key": "relation_display_column",
											"value": "name_basic"
										},
										{
											"key": "column_data_source_id",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnTableRelationsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple Relation Column With Sql",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColRelation2Id\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Örnek İkişkili Kolon (sql ile)&name=column_relation2&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_select_Id}}&srid&up_column_id=&column_table_relation_id={{relationIdForRelationColumn2}}&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Örnek İkişkili Kolon (sql ile)"
										},
										{
											"key": "name",
											"value": "column_relation2"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_select_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": ""
										},
										{
											"key": "column_table_relation_id",
											"value": "{{relationIdForRelationColumn2}}"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Join For Column Relation 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"join1IdForRelationColumn3\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/join_tables/store?name_basic=column_relation3 kolonu ve ilceler tablosu bağlantısı&join_table_id={{tablesIlcelerId}}&join_table_alias=ilcesi&connection_column_with_alias=column_relation3&join_column_id={{columnsIdId}}&description&state=1&column_set_id={{joinTablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"join_tables",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "column_relation3 kolonu ve ilceler tablosu bağlantısı"
										},
										{
											"key": "join_table_id",
											"value": "{{tablesIlcelerId}}"
										},
										{
											"key": "join_table_alias",
											"value": "ilcesi"
										},
										{
											"key": "connection_column_with_alias",
											"value": "column_relation3"
										},
										{
											"key": "join_column_id",
											"value": "{{columnsIdId}}"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{joinTablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Join For Column Relation 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"join2IdForRelationColumn3\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/join_tables/store?name_basic=iller_id kolonu üzerinden iller tablosu bağlantısı&join_table_id={{tablesIllerId}}&join_table_alias=ili&connection_column_with_alias=ilcesi.iller_id&join_column_id={{columnsIdId}}&description&state=1&column_set_id={{joinTablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"join_tables",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "iller_id kolonu üzerinden iller tablosu bağlantısı"
										},
										{
											"key": "join_table_id",
											"value": "{{tablesIllerId}}"
										},
										{
											"key": "join_table_alias",
											"value": "ili"
										},
										{
											"key": "connection_column_with_alias",
											"value": "ilcesi.iller_id"
										},
										{
											"key": "join_column_id",
											"value": "{{columnsIdId}}"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{joinTablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Relation With table_id and colname via join",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"relationIdForRelationColumn3\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_table_relations/store?name_basic=İlişkili kolon için ilçeler tablosu ilişkisi (table_id ve colname ile join üzerinden)&relation_table_id={{tablesIlcelerId}}&relation_source_column_id=&relation_display_column_id=&join_table_ids=[\"{{join1IdForRelationColumn3}}\", \"{{join2IdForRelationColumn3}}\"]&relation_sql&relation_source_column=id&relation_display_column=ili.name_basic || ' - ' || ilcesi.name_basic&column_data_source_id&description&state=1&column_set_id={{columnTableRelationsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_table_relations",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "İlişkili kolon için ilçeler tablosu ilişkisi (table_id ve colname ile join üzerinden)"
										},
										{
											"key": "relation_table_id",
											"value": "{{tablesIlcelerId}}"
										},
										{
											"key": "relation_source_column_id",
											"value": ""
										},
										{
											"key": "relation_display_column_id",
											"value": ""
										},
										{
											"key": "join_table_ids",
											"value": "[\"{{join1IdForRelationColumn3}}\", \"{{join2IdForRelationColumn3}}\"]"
										},
										{
											"key": "relation_sql",
											"value": null
										},
										{
											"key": "relation_source_column",
											"value": "id"
										},
										{
											"key": "relation_display_column",
											"value": "ili.name_basic || ' - ' || ilcesi.name_basic"
										},
										{
											"key": "column_data_source_id",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnTableRelationsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple Relation Column With table_id and colname via join",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColRelation3Id\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Örnek İkişkili Kolon  (table_id ve colname ile join üzerinden)&name=column_relation3&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_select_Id}}&srid&up_column_id=&column_table_relation_id={{relationIdForRelationColumn3}}&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Örnek İkişkili Kolon  (table_id ve colname ile join üzerinden)"
										},
										{
											"key": "name",
											"value": "column_relation3"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_select_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": ""
										},
										{
											"key": "column_table_relation_id",
											"value": "{{relationIdForRelationColumn3}}"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Test Data Source For Relation Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnDataSourceIdForRelationColumn4\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_data_sources/store?name=Test veri kaynağı&php_code=<?php $repository = new App\\Repositories\\TestRepository(); ?>&state=1&column_set_id={{columnDataSourcesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_data_sources",
										"store"
									],
									"query": [
										{
											"key": "name",
											"value": "Test veri kaynağı"
										},
										{
											"key": "php_code",
											"value": "<?php $repository = new App\\Repositories\\TestRepository(); ?>"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnDataSourcesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Relation With Data Source",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"relationIdForRelationColumn4\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_table_relations/store?name_basic=İlişkili kolon için ilişki (veri kaynağı ile)&relation_table_id=&relation_source_column_id=&relation_display_column_id=&join_table_ids=[]&relation_sql&relation_source_column=&relation_display_column=&column_data_source_id={{columnDataSourceIdForRelationColumn4}}&description&state=1&column_set_id={{columnTableRelationsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_table_relations",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "İlişkili kolon için ilişki (veri kaynağı ile)"
										},
										{
											"key": "relation_table_id",
											"value": ""
										},
										{
											"key": "relation_source_column_id",
											"value": ""
										},
										{
											"key": "relation_display_column_id",
											"value": ""
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "relation_sql",
											"value": null
										},
										{
											"key": "relation_source_column",
											"value": ""
										},
										{
											"key": "relation_display_column",
											"value": ""
										},
										{
											"key": "column_data_source_id",
											"value": "{{columnDataSourceIdForRelationColumn4}}"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnTableRelationsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Simple Relation Column With Data Source",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnsColRelation4Id\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/store?display_name=Örnek İkişkili Kolon  (Veri Kaynağı ile)&name=column_relation4&column_db_type_id={{columnDbTypes_integer_Id}}&column_gui_type_id={{columnGuiTypes_select_Id}}&srid&up_column_id=&column_table_relation_id={{relationIdForRelationColumn4}}&subscriber_ids=[]&column_validation_ids=[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Örnek İkişkili Kolon  (Veri Kaynağı ile)"
										},
										{
											"key": "name",
											"value": "column_relation4"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_integer_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_select_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": ""
										},
										{
											"key": "column_table_relation_id",
											"value": "{{relationIdForRelationColumn4}}"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\", \"{{columnValidation_numeric_min_1_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": null
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Table",
					"item": [
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"tablesTestId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/tables/store?display_name=Test&name=test&column_ids=[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColStringId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\"]&subscriber_ids=[]&legend_url&e_sign_pattern_t&description&link_description=link_aciklama&state=1&column_set_id={{tablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"tables",
										"store"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Test"
										},
										{
											"key": "name",
											"value": "test"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColStringId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\"]"
										},
										{
											"key": "subscriber_ids",
											"value": "[]"
										},
										{
											"key": "legend_url",
											"value": null
										},
										{
											"key": "e_sign_pattern_t",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "link_description",
											"value": "link_aciklama"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Record Operations",
					"item": [
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Map Data Control In Logged In User Info Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var info = data[\"data\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof info[\"map\"][\"angaryos__v_test\"] != \"undefined\");\r",
											"\r",
											"\r",
											"\r",
											"//Set Variables\r",
											"\r",
											"pm.environment.set(\"testTableColumnArrayId\", info[\"auths\"][\"tables\"][\"test\"][\"lists\"][0]);\r",
											"pm.environment.set(\"testTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"test\"][\"queries\"][0]);\r",
											"pm.environment.set(\"testTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"test\"][\"creates\"][0]);\r",
											"pm.environment.set(\"testTableColumnUpdateSetId\", info[\"auths\"][\"tables\"][\"test\"][\"edits\"][0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/getLoggedInUserInfo",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"getLoggedInUserInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(0, recs);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Create Form From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof data[\"data\"][\"table_info\"][\"name\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"column_set\"][\"column_arrays\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"gui_triggers\"] != \"undefined\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/create?params={\"column_set_id\":\"{{testTableColumnCreateSetId}}\"}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"create"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnCreateSetId}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Up Column Select Data Control 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(id, pm.environment.get(\"ilcelerSivrihisarId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_simple_up_column?search=***&upColumnName=iller_id&upColumnData={{illerEskisehirId}}&currentFormData={}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_simple_up_column"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										},
										{
											"key": "upColumnName",
											"value": "iller_id"
										},
										{
											"key": "upColumnData",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "currentFormData",
											"value": "{}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Up Column Select Data Control 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(id, pm.environment.get(\"ilcelerAltintasId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_simple_up_column?search=***&upColumnName=iller_id&upColumnData={{illerKutahyaId}}&currentFormData={}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_simple_up_column"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										},
										{
											"key": "upColumnName",
											"value": "iller_id"
										},
										{
											"key": "upColumnData",
											"value": "{{illerKutahyaId}}"
										},
										{
											"key": "currentFormData",
											"value": "{}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 1 Select Data Control",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_relation1?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation1"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 2 Select Data Control",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_relation2?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation2"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 3 Select Data Control",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_relation3?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation3"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 4 Select Data Control",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/getSelectColumnData/column_relation4?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation4"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Send Fail Data For Create Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(data[\"data\"][\"message\"], \"error\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Record Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"simpleRecordId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetId}}&id=0&column_json={\"key\":\"val\"}&column_jsonb={\"key\":\"val\"}&column_string=string&column_text=text text&column_int=1&column_float=1.2&column_boolean=1&column_date=2020-10-10&column_time=10:10:10&column_date_time=2020-10-10 10:10:10&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerAltintasId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_string",
											"value": "string"
										},
										{
											"key": "column_text",
											"value": "text text"
										},
										{
											"key": "column_int",
											"value": "1"
										},
										{
											"key": "column_float",
											"value": "1.2"
										},
										{
											"key": "column_boolean",
											"value": "1"
										},
										{
											"key": "column_date",
											"value": "2020-10-10"
										},
										{
											"key": "column_time",
											"value": "10:10:10"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:10"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Edit Form From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof data[\"data\"][\"table_info\"][\"name\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"column_set\"][\"column_arrays\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"gui_triggers\"] != \"undefined\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/edit?params={\"column_set_id\":\"{{testTableColumnCreateSetId}}\"}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"edit"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnCreateSetId}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/update?state=0&column_set_id={{testTableColumnCreateSetId}}&id={{simpleRecordId}}&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text2 text2&column_int=2&column_float=2.2&column_boolean=0&column_date=2021-11-11&column_time=11:11:11&column_date_time=2021-11-11 11:11:11&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerKutahyaId}}&column_simple_up_column={{ilcelerAltintasId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"update"
									],
									"query": [
										{
											"key": "state",
											"value": "0"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{simpleRecordId}}"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text2 text2"
										},
										{
											"key": "column_int",
											"value": "2"
										},
										{
											"key": "column_float",
											"value": "2.2"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2021-11-11"
										},
										{
											"key": "column_time",
											"value": "11:11:11"
										},
										{
											"key": "column_date_time",
											"value": "2021-11-11 11:11:11"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerKutahyaId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record Into Test Table 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/update?state=0&column_set_id={{testTableColumnCreateSetId}}&id={{simpleRecordId}}&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text2 text2&column_int=2&column_float=2.2&column_boolean=0&column_date=2021-11-11&column_time=11:11:11&column_date_time=2021-11-11 11:11:11&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerKutahyaId}}&column_simple_up_column={{ilcelerAltintasId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"update"
									],
									"query": [
										{
											"key": "state",
											"value": "0"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{simpleRecordId}}"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text2 text2"
										},
										{
											"key": "column_int",
											"value": "2"
										},
										{
											"key": "column_float",
											"value": "2.2"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2021-11-11"
										},
										{
											"key": "column_time",
											"value": "11:11:11"
										},
										{
											"key": "column_date_time",
											"value": "2021-11-11 11:11:11"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerKutahyaId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Archive List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"var controlData = data[\"data\"][\"records\"][0][\"column_string\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(2, recs);\r",
											"utils.equalControl(controlData, \"string2\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 1 Select Data Control For Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive/getSelectColumnData/column_relation1?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive",
										"getSelectColumnData",
										"column_relation1"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 2 Select Data Control For Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive/getSelectColumnData/column_relation2?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive",
										"getSelectColumnData",
										"column_relation2"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 3 Select Data Control For Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive/getSelectColumnData/column_relation3?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive",
										"getSelectColumnData",
										"column_relation3"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 4 Select Data Control For Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive/getSelectColumnData/column_relation4?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive",
										"getSelectColumnData",
										"column_relation4"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Archive List From Test Table With Filter And Sort And Limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"pm.environment.set(\"simpleRecordArchiveId\", id);\r",
											"\r",
											"var controlData = data[\"data\"][\"records\"][0][\"column_string\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(1, recs);\r",
											"utils.equalControl(controlData, \"string\");\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/archive?params={\"page\":1,\"limit\":\"2\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleRecordId}}\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"archive"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"2\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleRecordId}}\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Record From Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordArchiveId}}/restore",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordArchiveId}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clone Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"simpleClonedRecordId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordId}}/clone",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordId}}",
										"clone"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleClonedRecordId}}/delete",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleClonedRecordId}}",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"var controlData = data[\"data\"][\"records\"][0][\"column_string\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(1, recs);\r",
											"utils.equalControl(controlData, \"string\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 1 Select Data Control For Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted/getSelectColumnData/column_relation1?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted",
										"getSelectColumnData",
										"column_relation1"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 2 Select Data Control For Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted/getSelectColumnData/column_relation2?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted",
										"getSelectColumnData",
										"column_relation2"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 3 Select Data Control For Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted/getSelectColumnData/column_relation3?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted",
										"getSelectColumnData",
										"column_relation3"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Relation Column 4 Select Data Control For Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"results\"][0][\"id\"];\r",
											"var recs = data[\"results\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(recs, 2);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted/getSelectColumnData/column_relation4?search=***",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted",
										"getSelectColumnData",
										"column_relation4"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted List From Test Table With Filter And Sort And Limit",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"\r",
											"var recId = data[\"data\"][\"records\"][0][\"record_id\"];\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"var controlData = data[\"data\"][\"records\"][0][\"column_string\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(1, recs);\r",
											"utils.equalControl(controlData, \"string\");\r",
											"utils.idNumberControl(id);\r",
											"utils.idNumberControl(recId);\r",
											"utils.equalControl(pm.environment.get(\"simpleClonedRecordId\"), recId);\r",
											"\r",
											"pm.environment.set(\"simpleRecordDeletedId\", id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted?params={\"page\":1,\"limit\":\"2\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleClonedRecordId}}\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"2\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleClonedRecordId}}\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Record From Deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordDeletedId}}/restore",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordDeletedId}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get List From Test Table With Filter And Sort And Limit And Page",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"var controlData = data[\"data\"][\"records\"][0][\"column_string\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(1, recs);\r",
											"utils.equalControl(controlData, \"string\");\r",
											"\r",
											"utils.idNumberControl(id);\r",
											"utils.equalControl(id, pm.environment.get(\"simpleClonedRecordId\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test?params={\"page\":2,\"limit\":\"1\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":2,\"limit\":\"1\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{\"column_string\":true,\"column_text\":true,\"column_int\":true,\"column_float\":true,\"column_boolean\":true,\"column_date\":true,\"column_time\":true,\"column_date_time\":true,\"column_multipolygon\":true,\"iller_id\":true,\"column_simple_up_column\":true,\"column_relation2\":true,\"column_relation3\":true,\"column_relation4\":true,\"state\":true},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"},\"column_text\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"text text\"},\"column_int\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1\"},\"column_float\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"1.2\",\"description\":\"Virgüllü Sayı Kolon: 1.2\"},\"column_boolean\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true},\"column_date\":{\"type\":1,\"guiType\":\"date\",\"filter\":\"2020-10-10\"},\"column_time\":{\"type\":1,\"guiType\":\"time\",\"filter\":\"10:10:10\"},\"column_date_time\":{\"type\":1,\"guiType\":\"datetime\",\"filter\":\"2020-10-10 10:10:10\"},\"column_multipolygon\":{\"type\":1,\"guiType\":\"multipolygon\",\"filter\":\"[\\\"POLYGON((29.015834874873324 39.96345534744293,28.951506469951447 37.96294792811604,31.214920317246726 38.093105602308185,31.181557840576446 40.14400044361321,29.015834874873324 39.96345534744293))\\\"]\"},\"iller_id\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{illerEskisehirId}}\"]},\"column_simple_up_column\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerSivrihisarId}}\"]},\"column_relation1\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation2\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation3\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"{{ilcelerAltintasId}}\"]},\"column_relation4\":{\"type\":1,\"guiType\":\"multiselect\",\"filter\":[\"1\"]},\"state\":{\"type\":1,\"guiType\":\"boolean\",\"filter\":true}}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Triggers and e-sign patterns",
					"item": [
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Trigger For Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"tableSubscriberId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/subscribers/store?state=1&column_set_id={{tablesSubscribersColumnCreateSetId}}&id=0&name_basic=Test Tablo Takipçisi&subscriber_type_id=2&php_code=<?php\n\n$lib = new App\\Libraries\\TestLibrary();\n$lib->TableTriggerTest($type, $record);\n\n?>&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"subscribers",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesSubscribersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablo Takipçisi"
										},
										{
											"key": "subscriber_type_id",
											"value": "2",
											"description": "after"
										},
										{
											"key": "php_code",
											"value": "<?php\n\n$lib = new App\\Libraries\\TestLibrary();\n$lib->TableTriggerTest($type, $record);\n\n?>"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Trigger For Test Tables Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"columnSubscriberId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/subscribers/store?state=1&column_set_id={{tablesSubscribersColumnCreateSetId}}&id=0&name_basic=Test Kolon Takipçisi&subscriber_type_id=2&php_code=<?php\n\n$lib = new App\\Libraries\\TestLibrary();\n$lib->ColumnTriggerTest($type, $record);\n\n?>&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"subscribers",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesSubscribersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Kolon Takipçisi"
										},
										{
											"key": "subscriber_type_id",
											"value": "2",
											"description": "after"
										},
										{
											"key": "php_code",
											"value": "<?php\n\n$lib = new App\\Libraries\\TestLibrary();\n$lib->ColumnTriggerTest($type, $record);\n\n?>"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get e_sign Subscriber id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"eSignSubscriberId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/subscribers/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{subscribersTableColumnArrayId}}\",\"column_array_id_query\":\"{{subscribersTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name_basic\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"imza\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"subscribers",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{subscribersTableColumnArrayId}}\",\"column_array_id_query\":\"{{subscribersTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name_basic\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"imza\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Trigger And e-sign Pattern Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/tables/{{tablesTestId}}/update?display_name=Test&name=test&column_ids=[\"{{columnsIdId}}\",\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColStringId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\",\"{{columnsOwnIdId}}\",\"{{columnsUserIdId}}\",\"{{columnsCreatedAtId}}\", \"{{columnsUpdatedAtId}}\"]&subscriber_ids=[\"{{tableSubscriberId}}\",\"{{eSignSubscriberId}}\"]&legend_url&e_sign_pattern_t=<?php\n$overrideMethod = 'none';\n$lib = new App\\Libraries\\TestLibrary();\n$signedText = $lib->TableESignTest($type, $record);\n\n?>&description&link_description=link_aciklama&state=1&column_set_id={{tablesTableColumnCreateSetId}}&id={{tablesTestId}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"tables",
										"{{tablesTestId}}",
										"update"
									],
									"query": [
										{
											"key": "display_name",
											"value": "Test"
										},
										{
											"key": "name",
											"value": "test"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsIdId}}\",\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColStringId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\",\"{{columnsOwnIdId}}\",\"{{columnsUserIdId}}\",\"{{columnsCreatedAtId}}\", \"{{columnsUpdatedAtId}}\"]"
										},
										{
											"key": "subscriber_ids",
											"value": "[\"{{tableSubscriberId}}\",\"{{eSignSubscriberId}}\"]"
										},
										{
											"key": "legend_url",
											"value": null
										},
										{
											"key": "e_sign_pattern_t",
											"value": "<?php\n$overrideMethod = 'none';\n$lib = new App\\Libraries\\TestLibrary();\n$signedText = $lib->TableESignTest($type, $record);\n\n?>"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "link_description",
											"value": "link_aciklama"
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{tablesTestId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Trigger And e-sign Pattern Into Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/columns/{{columnsColStringId}}/update?display_name=String Kolon&name=column_string&column_db_type_id={{columnDbTypes_string_Id}}&column_gui_type_id={{columnGuiTypes_string_Id}}&srid&up_column_id&column_table_relation_id&subscriber_ids=[\"{{columnSubscriberId}}\", \"{{eSignSubscriberId}}\"]&column_validation_ids=[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]&column_gui_trigger_ids=[]&column_collective_info_id&default&e_sign_pattern_c=<?php\n\n$overrideMethod = 'none';\n$lib = new App\\Libraries\\TestLibrary();\n$signedText = $lib->ColumnESignTest($type, $record);\n\n?>&column_info&description&state=1&column_set_id={{columnsTableColumnCreateSetId}}&id={{columnsColStringId}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"columns",
										"{{columnsColStringId}}",
										"update"
									],
									"query": [
										{
											"key": "display_name",
											"value": "String Kolon"
										},
										{
											"key": "name",
											"value": "column_string"
										},
										{
											"key": "column_db_type_id",
											"value": "{{columnDbTypes_string_Id}}"
										},
										{
											"key": "column_gui_type_id",
											"value": "{{columnGuiTypes_string_Id}}"
										},
										{
											"key": "srid",
											"value": null
										},
										{
											"key": "up_column_id",
											"value": null
										},
										{
											"key": "column_table_relation_id",
											"value": null
										},
										{
											"key": "subscriber_ids",
											"value": "[\"{{columnSubscriberId}}\", \"{{eSignSubscriberId}}\"]"
										},
										{
											"key": "column_validation_ids",
											"value": "[\"{{columnValidation_required_Id}}\",\"{{columnValidation_min_5_Id}}\"]"
										},
										{
											"key": "column_gui_trigger_ids",
											"value": "[]"
										},
										{
											"key": "column_collective_info_id",
											"value": null
										},
										{
											"key": "default",
											"value": null
										},
										{
											"key": "e_sign_pattern_c",
											"value": "<?php\n\n$overrideMethod = 'none';\n$lib = new App\\Libraries\\TestLibrary();\n$signedText = $lib->ColumnESignTest($type, $record);\n\n?>"
										},
										{
											"key": "column_info",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{columnsTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{columnsColStringId}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Setting Record For Trigger and e-sign Validation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"settingId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/settings/store?state=1&column_set_id={{tablesSettingsColumnCreateSetId}}&id=0&name=TEST&value=test&description=",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"settings",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesSettingsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name",
											"value": "TEST"
										},
										{
											"key": "value",
											"value": "test"
										},
										{
											"key": "description",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Record For Trigger And e-sign Test Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"simpleRecordIdForESign\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetId}}&id=0&column_json={\"key\":\"val\"}&column_jsonb={\"key\":\"val\"}&column_string=string&column_text=text text&column_int=1&column_float=1.2&column_boolean=1&column_date=2020-10-10&column_time=10:10:10&column_date_time=2020-10-10 10:10:10&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerAltintasId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_string",
											"value": "string"
										},
										{
											"key": "column_text",
											"value": "text text"
										},
										{
											"key": "column_int",
											"value": "1"
										},
										{
											"key": "column_float",
											"value": "1.2"
										},
										{
											"key": "column_boolean",
											"value": "1"
										},
										{
											"key": "column_date",
											"value": "2020-10-10"
										},
										{
											"key": "column_time",
											"value": "10:10:10"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:10"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record For Trigger And e-sign Test Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordIdForESign}}/update?state=1&column_set_id={{testTableColumnCreateSetId}}&id=0&column_json={\"key\":\"val\"}&column_jsonb={\"key\":\"val\"}&column_string=string&column_text=text text&column_int=1&column_float=1.2&column_boolean=1&column_date=2020-10-10&column_time=10:10:10&column_date_time=2020-10-10 10:10:10&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerAltintasId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordIdForESign}}",
										"update"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key\":\"val\"}"
										},
										{
											"key": "column_string",
											"value": "string"
										},
										{
											"key": "column_text",
											"value": "text text"
										},
										{
											"key": "column_int",
											"value": "1"
										},
										{
											"key": "column_float",
											"value": "1.2"
										},
										{
											"key": "column_boolean",
											"value": "1"
										},
										{
											"key": "column_date",
											"value": "2020-10-10"
										},
										{
											"key": "column_time",
											"value": "10:10:10"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:10"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record For Trigger And e-sign Test Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordIdForESign}}/delete",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordIdForESign}}",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted Record ID From Test Table Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"utils.idNumberControl(id);\r",
											"\r",
											"pm.environment.set(\"simpleRecordRestoreIdForESign\", id)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/deleted?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleRecordIdForESign}}\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"deleted"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"record_id\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"{{simpleRecordIdForESign}}\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Record For Trigger And e-sign Test Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/{{simpleRecordRestoreIdForESign}}/restore",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordRestoreIdForESign}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Settings Record For Trigger Events",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var arr = data[\"data\"][\"records\"][0][\"value\"].split('|');\r",
											"var types = [\"table\", \"column\"];\r",
											"var events = [\"create\", \"update\", \"delete\", \"restore\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"for(var i = 0; i < types.length; i++)\r",
											"{\r",
											"    var t = types[i];\r",
											"\r",
											"    for(var j = 0; j < events.length; j++)\r",
											"    {\r",
											"        var e = events[j];\r",
											"        control = arr.includes(t+\".\"+e);\r",
											"        utils.equalControl(control, true);\r",
											"    }\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/settings?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{settingsTableColumnArrayId}}\",\"column_array_id_query\":\"{{settingsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"TEST\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"settings"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{settingsTableColumnArrayId}}\",\"column_array_id_query\":\"{{settingsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"TEST\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Added e-sign Records",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"var types = [\"table\", \"column\"];\r",
											"var events = [\"create\", \"update\", \"delete\", \"restore\"];\r",
											"var recs = data[\"data\"][\"records\"];\r",
											"\r",
											"var recId = pm.environment.get(\"simpleRecordIdForESign\");\r",
											"\r",
											"for(var i = 0; i < types.length; i++)\r",
											"{\r",
											"    var t = types[i];\r",
											"\r",
											"    for(var j = 0; j < events.length; j++)\r",
											"    {\r",
											"        var e = events[j];\r",
											"        var str = t+\".\"+e+\".\"+recId;\r",
											"        \r",
											"        var control = false;\r",
											"        for(var k = 0; k < recs.length; k++)\r",
											"        {\r",
											"            var r = recs[k];\r",
											"            if(r[\"signed_text\"] == str)\r",
											"            {\r",
											"                control = true;\r",
											"                break;\r",
											"            }\r",
											"        }\r",
											"\r",
											"        utils.equalControl(control, true);\r",
											"    }\r",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/e_signs?params={\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{eSignsTableColumnArrayId}}\",\"column_array_id_query\":\"{{eSignsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"e_signs"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"100\",\"column_array_id\":\"{{eSignsTableColumnArrayId}}\",\"column_array_id_query\":\"{{eSignsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Additional Operation Controls",
					"item": [
						{
							"name": "Create Table Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"tableGroupId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/table_groups/store?state=1&column_set_id={{tablesTableGroupsColumnCreateSetId}}&id=0&name_basic=Test Tablo Grubu&table_ids=[\"{{tablesTestId}}\"]&image_old=null&icon",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"table_groups",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesTableGroupsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablo Grubu"
										},
										{
											"key": "table_ids",
											"value": "[\"{{tablesTestId}}\"]"
										},
										{
											"key": "image_old",
											"value": "null"
										},
										{
											"key": "icon",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Auth Group Data For Table Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"\r",
											"var auths = data[\"data\"][\"records\"][0][\"auths\"];\r",
											"auths = JSON.parse(auths);\r",
											"var authsStr = \"[\";\r",
											"for(var i = 0; i < auths.length; i++)\r",
											"{\r",
											"    var temp = auths[i];\r",
											"    authsStr += '\"'+temp[\"source\"]+'\",';\r",
											"}\r",
											"authsStr += '\"table_groups:0:0:'+pm.environment.get(\"tableGroupId\")+'\"]';\r",
											"\r",
											"pm.environment.set(\"tableGroupAuthId\", id);\r",
											"pm.environment.set(\"tableGroupAuthsStr\", authsStr);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/auth_groups/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{authGroupsTableColumnArrayId}}\",\"column_array_id_query\":\"{{authGroupsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name_basic\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"Admin tablo grupları (menü)\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"auth_groups",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{authGroupsTableColumnArrayId}}\",\"column_array_id_query\":\"{{authGroupsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name_basic\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"Admin tablo grupları (menü)\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Auth Group For Table Group",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/auth_groups/{{tableGroupAuthId}}/update?auths={{tableGroupAuthsStr}}&column_set_id={{tablesAuthGroupsColumnEditSetId}}&id={{tableGroupAuthId}}&in_form_column_name=auths&single_column=auths",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"auth_groups",
										"{{tableGroupAuthId}}",
										"update"
									],
									"query": [
										{
											"key": "auths",
											"value": "{{tableGroupAuthsStr}}"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesAuthGroupsColumnEditSetId}}"
										},
										{
											"key": "id",
											"value": "{{tableGroupAuthId}}"
										},
										{
											"key": "in_form_column_name",
											"value": "auths"
										},
										{
											"key": "single_column",
											"value": "auths"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Table Group In User Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var info = data[\"data\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"var groups = info[\"menu\"][\"tableGroups\"];\r",
											"for(var i = 0; i < groups.length; i++)\r",
											"{\r",
											"    var g = groups[i];\r",
											"    if(g[\"name_basic\"] == \"Test Tablo Grubu\")\r",
											"    {\r",
											"        var c1 = g[\"table_ids\"].includes(pm.environment.get(\"tablesTestId\"));\r",
											"        utils.equalControl(true, c1);\r",
											"\r",
											"        var c2 = info[\"menu\"][\"tables\"][g[\"id\"]][0][\"link_description\"];\r",
											"        utils.equalControl(\"link_aciklama\", c2);\r",
											"    }        \r",
											"}\r",
											"\r",
											"var legend = info[\"map\"][\"angaryos__v_test\"][\"legend_url\"];\r",
											"legend = legend.replace(\"***token***\", pm.environment.get(\"token\"));\r",
											"legend = legend.replace(\"***width***\", 150);\r",
											"legend = legend.replace(\"***height***\", 150);\r",
											"\r",
											"pm.environment.set(\"legendUrl\", legend);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/getLoggedInUserInfo",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"getLoggedInUserInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Map Data Control",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{legendUrl}}",
									"host": [
										"{{legendUrl}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Auth Operations",
			"item": [
				{
					"name": "Preload Operations",
					"item": [
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Users table id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"pm.environment.set(\"tablesUsersId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/tables/?params={\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{tablesTableColumnArrayId}}\",\"column_array_id_query\":\"{{tablesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"users\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"tables",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"1\",\"column_array_id\":\"{{tablesTableColumnArrayId}}\",\"column_array_id_query\":\"{{tablesTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":4,\"guiType\":\"string\",\"filter\":\"users\"}}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Column Arrays And Sets",
					"item": [
						{
							"name": "Create Join For List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"joinIdForList\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/join_tables/store?name_basic=own_id kolonu üzerinden kullanıcılar tablosu bağlantısı&join_table_id={{tablesUsersId}}&join_table_alias=sahibi&connection_column_with_alias=\"own_id\"&join_column_id={{columnsIdId}}&description&state=1&column_set_id={{joinTablesTableColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"join_tables",
										"store"
									],
									"query": [
										{
											"key": "name_basic",
											"value": "own_id kolonu üzerinden kullanıcılar tablosu bağlantısı"
										},
										{
											"key": "join_table_id",
											"value": "{{tablesUsersId}}"
										},
										{
											"key": "join_table_alias",
											"value": "sahibi"
										},
										{
											"key": "connection_column_with_alias",
											"value": "\"own_id\""
										},
										{
											"key": "join_column_id",
											"value": "{{columnsIdId}}"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{joinTablesTableColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Array For List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnArrayIdForList\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_arrays/store?state=1&column_set_id={{tablesColumnArraysColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Liste)&column_array_type_id=1&table_id={{tablesTestId}}&column_ids=[\"{{columnsIdId}}\",\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\",\"{{columnsOwnIdId}}\",\"{{columnsUserIdId}}\",\"{{columnsCreatedAtId}}\", \"{{columnsUpdatedAtId}}\"]&join_table_ids=[\"{{joinIdForList}}\"]&join_columns=split_part(string_agg(sahibi.surname, ','), ',', 1) as sahibi_soyad&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_arrays",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnArraysColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Liste)"
										},
										{
											"key": "column_array_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsIdId}}\",\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\",\"{{columnsOwnIdId}}\",\"{{columnsUserIdId}}\",\"{{columnsCreatedAtId}}\", \"{{columnsUpdatedAtId}}\"]"
										},
										{
											"key": "join_table_ids",
											"value": "[\"{{joinIdForList}}\"]",
											"description": "buraya bir join yapılacak sonra list çekerken data test yapılacak"
										},
										{
											"key": "join_columns",
											"value": "split_part(string_agg(sahibi.surname, ','), ',', 1) as sahibi_soyad"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Array For Create And Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnArrayIdForCreateAndUpdate\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_arrays/store?state=1&column_set_id={{tablesColumnArraysColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Ekleme ve Güncelleme)&column_array_type_id=1&table_id={{tablesTestId}}&column_ids=[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]&join_table_ids=[]&join_columns&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_arrays",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnArraysColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Ekleme ve Güncelleme)"
										},
										{
											"key": "column_array_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]"
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "join_columns",
											"value": null
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Set For Create And Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnSetIdForCreateAndUpdate\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_sets/store?state=1&column_set_id={{tablesColumnSetsColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Formlar)&column_set_type_id=1&table_id={{tablesTestId}}&column_array_ids=[\"{{columnArrayIdForCreateAndUpdate}}\"]&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_sets",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnSetsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Formlar)"
										},
										{
											"key": "column_set_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_array_ids",
											"value": "[\"{{columnArrayIdForCreateAndUpdate}}\"]"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Array For Query",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnArrayIdForQuery\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_arrays/store?state=1&column_set_id={{tablesColumnArraysColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Sorgu)&column_array_type_id=1&table_id={{tablesTestId}}&column_ids=[\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]&join_table_ids=[]&join_columns&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_arrays",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnArraysColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Sorgu)"
										},
										{
											"key": "column_array_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]"
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "join_columns",
											"value": null
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Array For Info Card",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnArrayIdForInfoCard\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_arrays/store?state=1&column_set_id={{tablesColumnArraysColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı)&column_array_type_id=1&table_id={{tablesTestId}}&column_ids=[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]&join_table_ids=[]&join_columns&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_arrays",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnArraysColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı)"
										},
										{
											"key": "column_array_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_ids",
											"value": "[\"{{columnsColJsonId}}\",\"{{columnsColJsonBId}}\",\"{{columnsColTextId}}\",\"{{columnsColIntId}}\",\"{{columnsColFloatId}}\",\"{{columnsColBooleanId}}\",\"{{columnsColDateId}}\",\"{{columnsColTimeId}}\",\"{{columnsColDateTimeId}}\",\"{{columnsColMultiPolygonId}}\",\"{{columnsIllerIdId}}\",\"{{columnsColSimpleUpColumnId}}\",\"{{columnsColRelation1Id}}\",\"{{columnsColRelation2Id}}\",\"{{columnsColRelation3Id}}\",\"{{columnsColRelation4Id}}\",\"{{columnsStateId}}\"]"
										},
										{
											"key": "join_table_ids",
											"value": "[]"
										},
										{
											"key": "join_columns",
											"value": null
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Column Set For Info Card",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"columnSetIdForInfoCard\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/column_sets/store?state=1&column_set_id={{tablesColumnSetsColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı)&column_set_type_id=1&table_id={{tablesTestId}}&column_array_ids=[\"{{columnArrayIdForInfoCard}}\"]&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"column_sets",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesColumnSetsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı)"
										},
										{
											"key": "column_set_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "table_id",
											"value": "{{tablesTestId}}"
										},
										{
											"key": "column_array_ids",
											"value": "[\"{{columnArrayIdForInfoCard}}\"]"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Data Filters",
					"item": [
						{
							"name": "Create Filter For List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForList\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Liste Filtresi)&data_filter_type_id=1&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Liste Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "1",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForUpdate\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Güncelleme Filtresi)&data_filter_type_id=2&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Güncelleme Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "2",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Delete",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForDelete\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Silme Filtresi)&data_filter_type_id=3&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Silme Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "3",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Restore",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForRestore\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Geri Yükleme Filtresi)&data_filter_type_id=4&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Geri Yükleme Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "4",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Show",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForShow\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı Filtresi)&data_filter_type_id=5&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Bilgi Kartı Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "5",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Export",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForExport\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Dışa Aktarma Filtresi)&data_filter_type_id=6&sql_code=\"id\" = 1&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Dışa Aktarma Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "6",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "\"id\" = 1"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Filter For Select Column Data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"filterIdForSelectColumnData\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/data_filters/store?state=1&column_set_id={{tablesDataFiltersColumnCreateSetId}}&id=0&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Seçim Kolonu Filtresi)&data_filter_type_id=7&sql_code={\n    \"test.column_simple_up_column\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation1\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation2\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation3\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation4\": \"only.id.equal.two\"\n}&description",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"data_filters",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesDataFiltersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu (Seçim Kolonu Filtresi)"
										},
										{
											"key": "data_filter_type_id",
											"value": "7",
											"description": "none"
										},
										{
											"key": "sql_code",
											"value": "{\n    \"test.column_simple_up_column\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation1\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation2\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation3\": \" \\\"id\\\" = 2 \",\n    \"test.column_relation4\": \"only.id.equal.two\"\n}"
										},
										{
											"key": "description",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "User Operations",
					"item": [
						{
							"name": "Create New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"newUserId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/users/store?profile_picture_old=null&tc=44444444444&name_basic=Test&surname=Kullanıcı&department_id=1&phone=0 444 444 44 44&email=testuser@angaryos.org&email_verified_at&password=44444444444&auths=[]&srid=7932&remember_token&state=1&location&column_set_id={{tablesUsersColumnCreateSetId}}&id=0",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"users",
										"store"
									],
									"query": [
										{
											"key": "profile_picture_old",
											"value": "null"
										},
										{
											"key": "tc",
											"value": "44444444444"
										},
										{
											"key": "name_basic",
											"value": "Test"
										},
										{
											"key": "surname",
											"value": "Kullanıcı"
										},
										{
											"key": "department_id",
											"value": "1"
										},
										{
											"key": "phone",
											"value": "0 444 444 44 44"
										},
										{
											"key": "email",
											"value": "testuser@angaryos.org"
										},
										{
											"key": "email_verified_at",
											"value": null
										},
										{
											"key": "password",
											"value": "44444444444"
										},
										{
											"key": "auths",
											"value": "[]"
										},
										{
											"key": "srid",
											"value": "7932"
										},
										{
											"key": "remember_token",
											"value": null
										},
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "location",
											"value": null
										},
										{
											"key": "column_set_id",
											"value": "{{tablesUsersColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Auth Group For New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"authGroupIdForNewUser\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/auth_groups/store?auths=[\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:creates:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]&column_set_id={{tablesAuthGroupsColumnCreateSetId}}&id=0&description=&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu&state=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"auth_groups",
										"store"
									],
									"query": [
										{
											"key": "auths",
											"value": "[\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:creates:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesAuthGroupsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "description",
											"value": ""
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu"
										},
										{
											"key": "state",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Assign Auth For New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/assignAuth?all_user=0&auth_id={{authGroupIdForNewUser}}&auths=[]&department_ids=[]&user_ids=[{{newUserId}}]",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"assignAuth"
									],
									"query": [
										{
											"key": "all_user",
											"value": "0"
										},
										{
											"key": "auth_id",
											"value": "{{authGroupIdForNewUser}}"
										},
										{
											"key": "auths",
											"value": "[]"
										},
										{
											"key": "department_ids",
											"value": "[]"
										},
										{
											"key": "user_ids",
											"value": "[{{newUserId}}]"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login With New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var token = data[\"data\"][\"token\"]\r",
											"pm.environment.set(\"tokenForNewUser\", token);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.typeControl(token, 'string');\r",
											"\r",
											"pm.test(\"Token length control\", function () \r",
											"{\r",
											"    pm.expect(token.length > 10).to.be.true;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}login?email=testuser@angaryos.org&password=44444444444&clientInfo={\"type\":\"postman\", \"clientInfo\":\"Angaryos Api Test\"}",
									"host": [
										"{{apiUrl}}login"
									],
									"query": [
										{
											"key": "email",
											"value": "testuser@angaryos.org"
										},
										{
											"key": "password",
											"value": "44444444444"
										},
										{
											"key": "clientInfo",
											"value": "{\"type\":\"postman\", \"clientInfo\":\"Angaryos Api Test\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Data In Logged In User Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var info = data[\"data\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"\r",
											"utils.isTrue(typeof info[\"auths\"] != \"undefined\");\r",
											"utils.isTrue(typeof info[\"user\"] != \"undefined\");\r",
											"utils.isTrue(typeof info[\"menu\"] != \"undefined\");\r",
											"utils.isTrue(typeof info[\"map\"] != \"undefined\");\r",
											"\r",
											"\r",
											"utils.isTrue(info[\"map\"][\"angaryos__v_test\"][\"search\"]);\r",
											"utils.isTrue(info[\"map\"][\"angaryos__v_test\"][\"filter\"]);\r",
											"utils.isTrue(info[\"map\"][\"angaryos__v_test\"][\"layerAuth\"]);\r",
											"\r",
											"utils.isTrue(info[\"menu\"][\"tables\"].length == 0);\r",
											"\r",
											"\r",
											"pm.environment.set(\"newUserLoggedInUserInfo\", JSON.stringify(info));\r",
											"\r",
											"pm.environment.set(\"testTableColumnArrayIdForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"lists\"][0]);\r",
											"pm.environment.set(\"testTableColumnArrayIdQueryForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"testTableColumnCreateSetIdForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"creates\"][0]);\r",
											"pm.environment.set(\"testTableColumnUpdateSetIdForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"edits\"][0]);\r",
											"\r",
											"pm.environment.set(\"testTableColumnInfoSetIdForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"shows\"][0]);\r",
											"\r",
											"pm.environment.set(\"testTableColumnArrayIdForRestoreNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"restore\"][0]);\r",
											"pm.environment.set(\"testTableColumnArrayIdForDeleteForNewUser\", info[\"auths\"][\"tables\"][\"test\"][\"deleteds\"][0]);\r",
											"/*\r",
											"//Set variables \r",
											"\r",
											"pm.environment.set(\"loggedInUserInfo\", JSON.stringify(info));\r",
											"\r",
											"\r",
											"\r",
											"pm.environment.set(\"columnsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"columns\"][\"lists\"][0]);\r",
											"pm.environment.set(\"columnsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"columns\"][\"queries\"][0]);\r",
											"pm.environment.set(\"columnsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"columns\"][\"creates\"][0]);\r",
											"pm.environment.set(\"columnsTableColumnUpdateSetId\", info[\"auths\"][\"tables\"][\"columns\"][\"edits\"][0]);\r",
											"\r",
											"pm.environment.set(\"columnValidationsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_validations\"][\"lists\"][0]);\r",
											"pm.environment.set(\"columnValidationsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_validations\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"columnDbTypesTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_db_types\"][\"lists\"][0]);\r",
											"pm.environment.set(\"columnDbTypesTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_db_types\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"columnGuiTypesTableColumnArrayId\", info[\"auths\"][\"tables\"][\"column_gui_types\"][\"lists\"][0]);\r",
											"pm.environment.set(\"columnGuiTypesTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"column_gui_types\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"upColumnsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"up_columns\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"columnTableRelationsTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_table_relations\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"joinTablesTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"join_tables\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"columnDataSourcesTableColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_data_sources\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesSubscribersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"subscribers\"][\"creates\"][0]);\r",
											"pm.environment.set(\"subscribersTableColumnArrayId\", info[\"auths\"][\"tables\"][\"subscribers\"][\"lists\"][0]);\r",
											"pm.environment.set(\"subscribersTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"subscribers\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"settingsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"settings\"][\"lists\"][0]);\r",
											"pm.environment.set(\"settingsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"settings\"][\"queries\"][0]);\r",
											"pm.environment.set(\"tablesSettingsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"settings\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"eSignsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"e_signs\"][\"lists\"][0]);\r",
											"pm.environment.set(\"eSignsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"e_signs\"][\"queries\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesTableGroupsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"table_groups\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"authGroupsTableColumnArrayId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"lists\"][0]);\r",
											"pm.environment.set(\"authGroupsTableColumnArrayIdQuery\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"queries\"][0]);\r",
											"pm.environment.set(\"tablesAuthGroupsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"creates\"][0]);\r",
											"pm.environment.set(\"tablesAuthGroupsColumnEditSetId\", info[\"auths\"][\"tables\"][\"auth_groups\"][\"edits\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesUsersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"users\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesColumnArraysColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_arrays\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesColumnSetsColumnCreateSetId\", info[\"auths\"][\"tables\"][\"column_sets\"][\"creates\"][0]);\r",
											"\r",
											"pm.environment.set(\"tablesDataFiltersColumnCreateSetId\", info[\"auths\"][\"tables\"][\"data_filters\"][\"creates\"][0]);\r",
											"\r",
											"*/"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/getLoggedInUserInfo",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"getLoggedInUserInfo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Test Record Count Dashboard",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.typeControl(data[\"data\"][\"table_display_name\"], 'string');\r",
											"utils.typeControl(data[\"data\"][\"count\"], 'number');\r",
											"utils.typeControl(data[\"data\"][\"all\"], 'number');\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/dashboards/getData/dashboards:RecordCount:test:0",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"dashboards",
										"getData",
										"dashboards:RecordCount:test:0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Select Column Filter For Up Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var recs = data[\"results\"].length\r",
											"var id = data[\"results\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(recs, 1)\r",
											"utils.equalControl(id, 2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/getSelectColumnData/column_simple_up_column?search=***",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_simple_up_column"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Select Column Filter For Relation Column 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var recs = data[\"results\"].length\r",
											"var id = data[\"results\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(recs, 1)\r",
											"utils.equalControl(id, 2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/getSelectColumnData/column_relation1?search=***",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation1"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Select Column Filter For Relation Column 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var recs = data[\"results\"].length\r",
											"var id = data[\"results\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(recs, 1)\r",
											"utils.equalControl(id, 2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/getSelectColumnData/column_relation2?search=***",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation2"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Select Column Filter For Relation Column 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var recs = data[\"results\"].length\r",
											"var id = data[\"results\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(recs, 1)\r",
											"utils.equalControl(id, 2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/getSelectColumnData/column_relation3?search=***",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation3"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Select Column Filter For Relation Column 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"var recs = data[\"results\"].length\r",
											"var id = data[\"results\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(recs, 1)\r",
											"utils.equalControl(id, 2)"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/getSelectColumnData/column_relation4?search=***",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"getSelectColumnData",
										"column_relation4"
									],
									"query": [
										{
											"key": "search",
											"value": "***"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.equalControl(1, recs);\r",
											"utils.equalControl(1, id);\r",
											"\r",
											"var c = Object.keys(data[\"data\"][\"columns\"]).includes(\"column_string\");\r",
											"utils.equalControl(c, false);\r",
											"\r",
											"c = Object.keys(data[\"data\"][\"columns\"]).includes(\"sahibi_soyad\");\r",
											"utils.equalControl(c, true);\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Filter List From Test Table With Uncorrect Column",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(msg, \"no.auth.column.column_string.for.query\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"}}}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										""
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{\"column_string\":{\"type\":1,\"guiType\":\"string\",\"filter\":\"string\"}}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Create Form From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof data[\"data\"][\"table_info\"][\"name\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"column_set\"][\"column_arrays\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"gui_triggers\"] != \"undefined\");\r",
											"\r",
											"var c = Object.keys(data[\"data\"][\"column_set\"][\"column_arrays\"][0][\"columns\"]).includes(\"column_string\");\r",
											"utils.isTrue(!c);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/create?params={\"column_set_id\":\"{{testTableColumnCreateSetIdForNewUser}}\"}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"create"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnCreateSetIdForNewUser}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table With Fail Data 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth.for.column(column_simple_up_column).data:1\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerAltintasId}}&column_relation1={{ilcelerAltintasId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table With Fail Data 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth.for.column(column_relation1).data:1\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerAltintasId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table With Fail Data 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth.for.column(column_relation2).data:1\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerAltintasId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table With Fail Data 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth.for.column(column_relation3).data:1\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerAltintasId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerAltintasId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table With Fail Data 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth.for.column(column_relation4).data:1\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=1",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Record Into Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"];\r",
											"pm.environment.set(\"simpleRecordIdForNewUser\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=2",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Edit Form From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof data[\"data\"][\"table_info\"][\"name\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"column_set\"][\"column_arrays\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"gui_triggers\"] != \"undefined\");\r",
											"\r",
											"var c = Object.keys(data[\"data\"][\"column_set\"][\"column_arrays\"][0][\"columns\"]).includes(\"column_string\");\r",
											"utils.isTrue(!c);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/1/edit?params={\"column_set_id\":\"{{testTableColumnCreateSetIdForNewUser}}\"}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"1",
										"edit"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnCreateSetIdForNewUser}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Record From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/1/update?state=1&column_set_id={{testTableColumnUpdateSetIdForNewUser}}&id=0&column_json={\"key3\":\"val3\"}&column_jsonb={\"key3\":\"val3\"}&column_string=string3&column_text=text text3&column_int=13&column_float=1.23&column_boolean=0&column_date=2020-10-13&column_time=10:10:13&column_date_time=2020-10-10 10:10:13&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=2",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"1",
										"update"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnUpdateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key3\":\"val3\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key3\":\"val3\"}"
										},
										{
											"key": "column_string",
											"value": "string3"
										},
										{
											"key": "column_text",
											"value": "text text3"
										},
										{
											"key": "column_int",
											"value": "13"
										},
										{
											"key": "column_float",
											"value": "1.23"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-13"
										},
										{
											"key": "column_time",
											"value": "10:10:13"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:13"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Update Uncorrect Record From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/2/update?state=1&column_set_id={{testTableColumnUpdateSetIdForNewUser}}&id=0&column_json={\"key3\":\"val3\"}&column_jsonb={\"key3\":\"val3\"}&column_string=string3&column_text=text text3&column_int=13&column_float=1.23&column_boolean=0&column_date=2020-10-13&column_time=10:10:13&column_date_time=2020-10-10 10:10:13&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=2",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"2",
										"update"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnUpdateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key3\":\"val3\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key3\":\"val3\"}"
										},
										{
											"key": "column_string",
											"value": "string3"
										},
										{
											"key": "column_text",
											"value": "text text3"
										},
										{
											"key": "column_int",
											"value": "13"
										},
										{
											"key": "column_float",
											"value": "1.23"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-13"
										},
										{
											"key": "column_time",
											"value": "10:10:13"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:13"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Info Card From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(typeof data[\"data\"][\"table_info\"][\"name\"] != \"undefined\");\r",
											"utils.isTrue(typeof data[\"data\"][\"column_set\"][\"column_arrays\"] != \"undefined\");\r",
											"\r",
											"utils.isTrue(typeof data[\"data\"][\"record\"][\"column_string\"] == \"undefined\");\r",
											"\r",
											"var c = Object.keys(data[\"data\"][\"column_set\"][\"column_arrays\"][0][\"columns\"]).includes(\"column_string\");\r",
											"utils.isTrue(!c);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/1?params={\"column_set_id\":\"{{testTableColumnInfoSetIdForNewUser}}\"}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"1"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnInfoSetIdForNewUser}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Get Info Card Uncorrect Record From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/2?params={\"column_set_id\":\"{{testTableColumnInfoSetIdForNewUser}}\"}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"2"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"column_set_id\":\"{{testTableColumnInfoSetIdForNewUser}}\"}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Archive List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length;\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(recs > 0);\r",
											"utils.idNumberControl(id);\r",
											"\r",
											"for(var i = 0; i < recs; i++)\r",
											"    utils.equalControl(data[\"data\"][\"records\"][i][\"record_id\"], 1);\r",
											"\r",
											"pm.environment.set(\"simpleRecordArchivedIdForNewUser\", id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/1/archive?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForRestoreNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"1",
										"archive"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForRestoreNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Record From Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/{{simpleRecordArchivedIdForNewUser}}/restore",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordArchivedIdForNewUser}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Archive Record Id From Test Table For Uncorrect Restore",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length;\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(recs > 0);\r",
											"\r",
											"id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"pm.environment.set(\"simpleRecordUncorrectArchiveIdForNewUser\", id);\r",
											"\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/test/2/archive?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"test",
										"2",
										"archive"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayId}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Restore Uncorrect Record From Archive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/{{simpleRecordUncorrectArchiveIdForNewUser}}/restore",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordUncorrectArchiveIdForNewUser}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/1/delete",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"1",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Delete Uncorrect Record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/2/delete",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"2",
										"delete"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Deleted List From Test Table",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var recs = data[\"data\"][\"records\"].length;\r",
											"var id = data[\"data\"][\"records\"][0][\"id\"];\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.isTrue(recs > 0);\r",
											"utils.idNumberControl(id);\r",
											"\r",
											"for(var i = 0; i < recs; i++)\r",
											"    utils.equalControl(data[\"data\"][\"records\"][i][\"record_id\"], 1);\r",
											"\r",
											"pm.environment.set(\"simpleRecordDeletedIdForNewUser\", id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/deleted?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForDeleteForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"deleted"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{testTableColumnArrayIdForDeleteForNewUser}}\",\"column_array_id_query\":\"{{testTableColumnArrayIdQueryForNewUser}}\",\"sorts\":{},\"filters\":{}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Restore Record From Deleted List",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/{{simpleRecordDeletedIdForNewUser}}/restore",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"{{simpleRecordDeletedIdForNewUser}}",
										"restore"
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Create New Record Auth From Auth Group For New User Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/auth_groups/{{authGroupIdForNewUser}}/update?auths=[\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]&column_set_id={{tablesAuthGroupsColumnCreateSetId}}&id={{authGroupIdForNewUser}}&description=&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu&state=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"auth_groups",
										"{{authGroupIdForNewUser}}",
										"update"
									],
									"query": [
										{
											"key": "auths",
											"value": "[\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesAuthGroupsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{authGroupIdForNewUser}}"
										},
										{
											"key": "description",
											"value": ""
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu"
										},
										{
											"key": "state",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Try Create Record Into Test Table After Disable Create Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var msg = data[\"data\"][\"message\"];\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.equalControl(\"no.auth\", msg);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/tables/test/store?state=1&column_set_id={{testTableColumnCreateSetIdForNewUser}}&id=0&column_json={\"key2\":\"val2\"}&column_jsonb={\"key2\":\"val2\"}&column_string=string2&column_text=text text2&column_int=12&column_float=1.22&column_boolean=0&column_date=2020-10-12&column_time=10:10:12&column_date_time=2020-10-10 10:10:12&column_multipolygon=MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))&iller_id={{illerEskisehirId}}&column_simple_up_column={{ilcelerSivrihisarId}}&column_relation1={{ilcelerSivrihisarId}}&column_relation2={{ilcelerSivrihisarId}}&column_relation3={{ilcelerSivrihisarId}}&column_relation4=2",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"tables",
										"test",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{testTableColumnCreateSetIdForNewUser}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "column_json",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_jsonb",
											"value": "{\"key2\":\"val2\"}"
										},
										{
											"key": "column_string",
											"value": "string2"
										},
										{
											"key": "column_text",
											"value": "text text2"
										},
										{
											"key": "column_int",
											"value": "12"
										},
										{
											"key": "column_float",
											"value": "1.22"
										},
										{
											"key": "column_boolean",
											"value": "0"
										},
										{
											"key": "column_date",
											"value": "2020-10-12"
										},
										{
											"key": "column_time",
											"value": "10:10:12"
										},
										{
											"key": "column_date_time",
											"value": "2020-10-10 10:10:12"
										},
										{
											"key": "column_multipolygon",
											"value": "MULTIPOLYGON(((474527.65314122476 4380907.6510382,464412.17339583614 4336623.912395764,533114.3752754428 4369172.870733916,474527.65314122476 4380907.6510382)))"
										},
										{
											"key": "iller_id",
											"value": "{{illerEskisehirId}}"
										},
										{
											"key": "column_simple_up_column",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation1",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation2",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation3",
											"value": "{{ilcelerSivrihisarId}}"
										},
										{
											"key": "column_relation4",
											"value": "2"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Additional Features",
			"item": [
				{
					"name": "Missions",
					"item": [
						{
							"name": "Create Simple Mission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"missionId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/missions/store?state=1&column_set_id={{tablesMissionsColumnCreateSetId}}&id=0&name=Test görev&cron&php_code=<?php\n\n$s = DB::table('settings')->where('name', 'TEST')->first();\nDB::table('settings')->where('name', 'TEST')->update(['value' => $s->value.'|mission|']);\n$return = \"OK\";\n\n?>&description&last_worked_at",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"missions",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesMissionsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "name",
											"value": "Test görev"
										},
										{
											"key": "cron",
											"value": null
										},
										{
											"key": "php_code",
											"value": "<?php\n\n$s = DB::table('settings')->where('name', 'TEST')->first();\nDB::table('settings')->where('name', 'TEST')->update(['value' => $s->value.'|mission|']);\n$return = \"OK\";\n\n?>"
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "last_worked_at",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trigger Mission",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"OK\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/{{missionId}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"{{missionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Validate Settings Record For Mission Trigger",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"var control = data[\"data\"][\"records\"][0][\"value\"].indexOf(\"|mission|\");\r",
											"utils.isTrue(control > -1);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/settings?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{settingsTableColumnArrayId}}\",\"column_array_id_query\":\"{{settingsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"TEST\"}}}",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"settings"
									],
									"query": [
										{
											"key": "params",
											"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{settingsTableColumnArrayId}}\",\"column_array_id_query\":\"{{settingsTableColumnArrayIdQuery}}\",\"sorts\":{},\"filters\":{\"name\":{\"type\":1,\"guiType\":\"numeric\",\"filter\":\"TEST\"}}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Additional Links",
					"item": [
						{
							"name": "Create Simple Additional Link",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var id = data[\"data\"][\"id\"]\r",
											"pm.environment.set(\"additionalLinkId\", id);\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.idNumberControl(id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/additional_links/store?state=1&column_set_id={{tablesMissionsColumnCreateSetId}}&id=0&additional_link_type_id=1&table_group_id={{tableGroupId}}&name_basic=Test Ek Link&url=***baseUrl***/api/v1/***token***/missions/1&open_new_window=1&payload&description&link_description=Test Açıklama",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"additional_links",
										"store"
									],
									"query": [
										{
											"key": "state",
											"value": "1"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesMissionsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "0"
										},
										{
											"key": "additional_link_type_id",
											"value": "1",
											"description": "standart"
										},
										{
											"key": "table_group_id",
											"value": "{{tableGroupId}}"
										},
										{
											"key": "name_basic",
											"value": "Test Ek Link"
										},
										{
											"key": "url",
											"value": "***baseUrl***/api/v1/***token***/missions/1"
										},
										{
											"key": "open_new_window",
											"value": "1"
										},
										{
											"key": "payload",
											"value": null
										},
										{
											"key": "description",
											"value": null
										},
										{
											"key": "link_description",
											"value": "Test Açıklama"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Additional Link Into Auth Group For New User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/tables/auth_groups/{{authGroupIdForNewUser}}/update?auths=[\"additional_links:0:0:{{additionalLinkId}}\",\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]&column_set_id={{tablesAuthGroupsColumnCreateSetId}}&id={{authGroupIdForNewUser}}&description=&name_basic=Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu&state=1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"tables",
										"auth_groups",
										"{{authGroupIdForNewUser}}",
										"update"
									],
									"query": [
										{
											"key": "auths",
											"value": "[\"additional_links:0:0:{{additionalLinkId}}\",\"tables:test:lists:{{columnArrayIdForList}}\",\"tables:test:edits:{{columnSetIdForCreateAndUpdate}}\",\"tables:test:delete:0\",\"tables:test:shows:{{columnSetIdForInfoCard}}\",\"tables:test:queries:{{columnArrayIdForQuery}}\",\"tables:test:restore:{{columnArrayIdForList}}\",\"tables:test:deleteds:{{columnArrayIdForList}}\",\"tables:test:export:0\",\"filters:test:list:{{filterIdForList}}\",\"filters:test:update:{{filterIdForUpdate}}\",\"filters:test:delete:{{filterIdForDelete}}\",\"filters:test:restore:{{filterIdForRestore}}\",\"filters:test:show:{{filterIdForShow}}\",\"filters:test:export:{{filterIdForExport}}\",\"filters:test:selectColumnData:{{filterIdForSelectColumnData}}\",\"tables:test:option:0\",\"dashboards:RecordCount:test:0\",\"tables:test:maps:2\",\"tables:test:maps:1\",\"tables:test:maps:3\"]"
										},
										{
											"key": "column_set_id",
											"value": "{{tablesAuthGroupsColumnCreateSetId}}"
										},
										{
											"key": "id",
											"value": "{{authGroupIdForNewUser}}"
										},
										{
											"key": "description",
											"value": ""
										},
										{
											"key": "name_basic",
											"value": "Test Tablosu Test Kullanıcısı İçin Test Yetki Grubu"
										},
										{
											"key": "state",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Cache Clear",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{token}}/missions/1",
									"host": [
										"{{apiUrl}}{{token}}"
									],
									"path": [
										"missions",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Control Additional Link In Logged In User Info",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = pm.response.json();\r",
											"var info = data[\"data\"]\r",
											"\r",
											"const utils = eval(globals.loadUtils);\r",
											"utils.standartControl();\r",
											"\r",
											"var id = info[\"menu\"][\"additionalLinks\"][0][\"id\"];\r",
											"var c = pm.environment.get(\"additionalLinkId\");\r",
											"utils.equalControl(id, c);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{apiUrl}}{{tokenForNewUser}}/getLoggedInUserInfo",
									"host": [
										"{{apiUrl}}{{tokenForNewUser}}"
									],
									"path": [
										"getLoggedInUserInfo"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "IOT",
			"item": [
				{
					"name": "Create Simple Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var id = data[\"data\"][\"id\"]\r",
									"pm.environment.set(\"deviceId\", id);\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.idNumberControl(id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/tables/devices/store?state=1&column_set_id={{tablesDevicesColumnCreateSetId}}&id=0&name_basic=Test Cihaz&description&ip&device_unique_info={{deviceUnique}}&password={{devicePassword}}",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"tables",
								"devices",
								"store"
							],
							"query": [
								{
									"key": "state",
									"value": "1"
								},
								{
									"key": "column_set_id",
									"value": "{{tablesDevicesColumnCreateSetId}}"
								},
								{
									"key": "id",
									"value": "0"
								},
								{
									"key": "name_basic",
									"value": "Test Cihaz"
								},
								{
									"key": "description",
									"value": null
								},
								{
									"key": "ip",
									"value": null
								},
								{
									"key": "device_unique_info",
									"value": "{{deviceUnique}}"
								},
								{
									"key": "password",
									"value": "{{devicePassword}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Cache Clear Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.messageControl(data[\"data\"][\"message\"], \"Cache Cleared\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{token}}/missions/1",
							"host": [
								"{{apiUrl}}{{token}}"
							],
							"path": [
								"missions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login Device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var token = data[\"data\"][\"token\"]\r",
									"pm.environment.set(\"deviceToken\", token);\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.typeControl(token, 'string');\r",
									"\r",
									"pm.test(\"Token length control\", function () \r",
									"{\r",
									"    pm.expect(token.length > 10).to.be.true;\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}deviceLogin?type=devices&unique={{deviceUnique}}&password={{devicePassword}}",
							"host": [
								"{{apiUrl}}deviceLogin"
							],
							"query": [
								{
									"key": "type",
									"value": "devices"
								},
								{
									"key": "unique",
									"value": "{{deviceUnique}}"
								},
								{
									"key": "password",
									"value": "{{devicePassword}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Public User Auths",
			"item": [
				{
					"name": "Get Logged In User Info For Public User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var info = data[\"data\"]\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"\r",
									"\r",
									"utils.isTrue(typeof info[\"auths\"] != \"undefined\");\r",
									"utils.isTrue(typeof info[\"user\"] != \"undefined\");\r",
									"utils.isTrue(typeof info[\"menu\"] != \"undefined\");\r",
									"\r",
									"\r",
									"//Set variables \r",
									"\r",
									"pm.environment.set(\"loggedInUserInfo\", JSON.stringify(info));\r",
									"\r",
									"pm.environment.set(\"tablesPublicContentsListArrayIdForPublicUser\", info[\"auths\"][\"tables\"][\"public_contents\"][\"lists\"][0]);\r",
									"pm.environment.set(\"tablesPublicContentsListArrayIdQueryForPublicUser\", info[\"auths\"][\"tables\"][\"public_contents\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesAnnouncementsListArrayIdForPublicUser\", info[\"auths\"][\"tables\"][\"announcements\"][\"lists\"][0]);\r",
									"pm.environment.set(\"tablesAnnouncementsListArrayIdQueryForPublicUser\", info[\"auths\"][\"tables\"][\"announcements\"][\"queries\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesRegisterRequestsColumnCreateSetIdForPublicUser\", info[\"auths\"][\"tables\"][\"register_requests\"][\"creates\"][0]);\r",
									"pm.environment.set(\"tablesFeedbacksColumnCreateSetIdForPublicUser\", info[\"auths\"][\"tables\"][\"feedbacks\"][\"creates\"][0]);\r",
									"\r",
									"pm.environment.set(\"tablesESignsListArrayIdForPublicUser\", info[\"auths\"][\"tables\"][\"e_signs\"][\"lists\"][0]);\r",
									"pm.environment.set(\"tablesESignsListArrayIdQueryForPublicUser\", info[\"auths\"][\"tables\"][\"e_signs\"][\"queries\"][0]);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/getLoggedInUserInfo",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"getLoggedInUserInfo"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Simple Feedback",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var id = data[\"data\"][\"id\"]\r",
									"pm.environment.set(\"feedbackId\", id);\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.idNumberControl(id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/tables/feedbacks/store?state=1&column_set_id={{tablesFeedbacksColumnCreateSetIdForPublicUser}}&id=0&name_surname=Test Kişi&phone=0 555 555 55 55&email_basic=test@angaryos.org&description=Test açıklama",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"tables",
								"feedbacks",
								"store"
							],
							"query": [
								{
									"key": "state",
									"value": "1"
								},
								{
									"key": "column_set_id",
									"value": "{{tablesFeedbacksColumnCreateSetIdForPublicUser}}"
								},
								{
									"key": "id",
									"value": "0"
								},
								{
									"key": "name_surname",
									"value": "Test Kişi"
								},
								{
									"key": "phone",
									"value": "0 555 555 55 55"
								},
								{
									"key": "email_basic",
									"value": "test@angaryos.org"
								},
								{
									"key": "description",
									"value": "Test açıklama"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Simple Register Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var id = data[\"data\"][\"id\"]\r",
									"pm.environment.set(\"registerRequestId\", id);\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.idNumberControl(id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/tables/register_requests/store?state=1&column_set_id={{tablesFeedbacksColumnCreateSetIdForPublicUser}}&id=0&tc=11111111118&name_basic=Test&surname=Kişi&email_basic=test@angaryos.org&password=test@angaryos.org&detail=",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"tables",
								"register_requests",
								"store"
							],
							"query": [
								{
									"key": "state",
									"value": "1"
								},
								{
									"key": "column_set_id",
									"value": "{{tablesFeedbacksColumnCreateSetIdForPublicUser}}"
								},
								{
									"key": "id",
									"value": "0"
								},
								{
									"key": "tc",
									"value": "11111111118"
								},
								{
									"key": "name_basic",
									"value": "Test"
								},
								{
									"key": "surname",
									"value": "Kişi"
								},
								{
									"key": "email_basic",
									"value": "test@angaryos.org"
								},
								{
									"key": "password",
									"value": "test@angaryos.org"
								},
								{
									"key": "detail",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List From Public Contents Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var recs = data[\"data\"][\"records\"].length\r",
									"var id = data[\"data\"][\"records\"][0][\"id\"]\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"utils.isTrue(recs > 0);\r",
									"utils.idNumberControl(id);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/tables/public_contents/?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesPublicContentsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesPublicContentsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"tables",
								"public_contents",
								""
							],
							"query": [
								{
									"key": "params",
									"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesPublicContentsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesPublicContentsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List From Announcements Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var recs = data[\"data\"][\"records\"].length\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/tables/announcements?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesAnnouncementsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesAnnouncementsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"tables",
								"announcements"
							],
							"query": [
								{
									"key": "params",
									"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesAnnouncementsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesAnnouncementsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get List From E Signs Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"var recs = data[\"data\"][\"records\"].length\r",
									"\r",
									"const utils = eval(globals.loadUtils);\r",
									"utils.standartControl();\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{apiUrl}}{{tokenPublic}}/tables/e_signs?params={\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesESignsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesESignsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}",
							"host": [
								"{{apiUrl}}{{tokenPublic}}"
							],
							"path": [
								"tables",
								"e_signs"
							],
							"query": [
								{
									"key": "params",
									"value": "{\"page\":1,\"limit\":\"10\",\"column_array_id\":\"{{tablesESignsListArrayIdForPublicUser}}\",\"column_array_id_query\":\"{{tablesESignsListArrayIdQueryForPublicUser}}\",\"sorts\":{},\"filters\":{}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}